apiVersion: apps/v1
kind: Deployment
metadata:
  name: membership-microservice
  namespace: medicover-pl-current
  uid: db83c936-2897-4c48-9bfa-209448430e3d
  resourceVersion: '11307571'
  generation: 2
  creationTimestamp: '2022-07-07T12:27:00Z'
  annotations:
    deployment.kubernetes.io/revision: '2'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"membership-microservice","namespace":"medicover-pl-current"},"spec":{"minReadySeconds":5,"replicas":1,"selector":{"matchLabels":{"app":"membership-microservice"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"membership-microservice"}},"spec":{"containers":[{"env":[{"name":"TZ","value":"Europe/Warsaw"}],"image":"mcovglobal.azurecr.io/mtech-ro/backoffice/membership-microservice:candidate-20210915.1","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":2,"initialDelaySeconds":70,"periodSeconds":5,"successThreshold":1,"tcpSocket":{"port":80},"timeoutSeconds":3},"name":"membership-microservice","ports":[{"containerPort":80}],"readinessProbe":{"failureThreshold":2,"initialDelaySeconds":30,"periodSeconds":2,"successThreshold":1,"tcpSocket":{"port":80},"timeoutSeconds":2},"resources":{"limits":{"cpu":"200m","memory":"200Mi"},"requests":{"cpu":"100m","memory":"200Mi"}},"volumeMounts":[{"mountPath":"/app/secrets","name":"secrets","readOnly":true},{"mountPath":"/etc/ssl/certs/medicoverEnterprise.crt","name":"ca-pemstore","subPath":"medicoverEnterprise.crt"},{"mountPath":"/etc/ssl/certs/medicoverRoot.crt","name":"ca-pemstore","subPath":"medicoverRoot.crt"}]}],"imagePullSecrets":[{"name":"mcovglobal-acr"}],"nodeSelector":{"beta.kubernetes.io/os":"linux"},"volumes":[{"name":"secrets","secret":{"secretName":"membership-microservice-settings"}},{"configMap":{"name":"ca-pemstore"},"name":"ca-pemstore"}]}}}}
  managedFields:
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: apps/v1
      time: '2022-07-11T06:22:48Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:minReadySeconds: {}
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"membership-microservice"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"TZ"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:tcpSocket:
                      .: {}
                      f:port: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/app/secrets"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/ssl/certs/medicoverEnterprise.crt"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
                    k:{"mountPath":"/etc/ssl/certs/medicoverRoot.crt"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
              f:dnsPolicy: {}
              f:imagePullSecrets:
                .: {}
                k:{"name":"mcovglobal-acr"}: {}
              f:nodeSelector: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"ca-pemstore"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"secrets"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2022-07-11T06:23:30Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      subresource: status
  selfLink: >-
    /apis/apps/v1/namespaces/medicover-pl-current/deployments/membership-microservice
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2022-07-07T19:34:28Z'
      lastTransitionTime: '2022-07-07T19:34:28Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2022-07-11T06:23:30Z'
      lastTransitionTime: '2022-07-07T12:27:00Z'
      reason: NewReplicaSetAvailable
      message: >-
        ReplicaSet "membership-microservice-5d47fcc857" has successfully
        progressed.
spec:
  replicas: 1
  selector:
    matchLabels:
      app: membership-microservice
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: membership-microservice
    spec:
      volumes:
        - name: secrets
          secret:
            secretName: membership-microservice-settings
            defaultMode: 420
        - name: ca-pemstore
          configMap:
            name: ca-pemstore
            defaultMode: 420
      containers:
        - name: membership-microservice
          image: >-
            mcovglobal.azurecr.io/mtech-ro/backoffice/membership-microservice:candidate-20210915.1
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: TZ
              value: Europe/Warsaw
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: secrets
              readOnly: true
              mountPath: /app/secrets
            - name: ca-pemstore
              mountPath: /etc/ssl/certs/medicoverEnterprise.crt
              subPath: medicoverEnterprise.crt
            - name: ca-pemstore
              mountPath: /etc/ssl/certs/medicoverRoot.crt
              subPath: medicoverRoot.crt
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 70
            timeoutSeconds: 3
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 30
            timeoutSeconds: 2
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 2
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        beta.kubernetes.io/os: linux
      securityContext: {}
      imagePullSecrets:
        - name: mcovglobal-acr
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  minReadySeconds: 5
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600